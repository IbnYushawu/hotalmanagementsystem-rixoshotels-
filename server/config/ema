"use strict";
const nodemailer = require("nodemailer");

// async..await is not allowed in global scope, must use a wrapper
async function main() {
  // Generate test SMTP service account from ethereal.email
  // Only needed if you don't have a real mail account for testing
  let testAccount = await nodemailer.createTestAccount();

  // create reusable transporter object using the default SMTP transport
  let transporter = nodemailer.createTransport({
    host: "smtp.ethereal.email",
    port: 587,
    secure: false, // true for 465, false for other ports
    auth: {
      user: testAccount.user, // generated ethereal user
      pass: testAccount.pass, // generated ethereal password
    },
  });

  // send mail with defined transport object
  let info = await transporter.sendMail({
    from: '"Fred Foo ðŸ‘»" <foo@example.com>', // sender address
    to: "bar@example.com, baz@example.com", // list of receivers
    subject: "Hello âœ”", // Subject line
    text: "Hello world?", // plain text body
    html: "<b>Hello world?</b>", // html body
  });

 
  // Message sent: <b658f8ca-6296-ccf4-8306-87d57a0b4321@example.com>

  // Preview only available when sending through an Ethereal account
 
  // Preview URL: https://ethereal.email/message/WaQKMgKddxQDoou...
}

main().catch(console.error);

///////////////////////////////////////////////////


const nodemailer = require("nodemailer");
const Mailgen=require("mailgen")

require("dotenv").config()

let transporter=nodemailer.createTransport({
    service:"Gmail",
    secure:true,
    auth:{
        user:process.env.EMAIL,
        pass:process.env.E_PASS
    }

});

const Contactmail=async (contact)=>{
    try {
        let mailG=new Mailgen({
            theme:"default",
            product:{
                name:"luxurytransport",
                link:`${process.env.EMAIL_MAIN_URL}`
            }
        });

const email={
    body:{
     intro:[
         "someone went a message",
         `Email:${contact.email}`,
         `firstname:${contact.firstname}`,
         `lastname:${contact.lastname}`
     ],
     outro:[`${contact.message}`]
    }
} 
  let emailbody=mailG.generate(email) ;
  let message={
      from:process.env.EMAIL,
      to:process.env.EMAIL,
      subject:"contact",
      html:emailbody

  }  
  await transporter.sendMail(message) ;
  return true 

    } catch (error) {
        if(error){
           
        }
        
    }
}

module.exports=Contactmail

